{"ast":null,"code":"const url = require(\"url\");\n\nconst template = require(\"nba-client-template\");\n\nconst HEADERS = {\n  \"Accept-Encoding\": \"gzip, deflate\",\n  \"Accept-Language\": \"en-US\",\n  Accept: \"*/*\",\n  \"User-Agent\": template.user_agent,\n  Referer: template.referrer,\n  Connection: \"keep-alive\",\n  \"Cache-Control\": \"no-cache\",\n  Origin: \"http://stats.nba.com\"\n};\n\nfunction createUrlString(_url, query) {\n  const urlObj = url.parse(_url);\n  urlObj.query = query;\n  return urlObj.format();\n}\n\nfunction createGetJson() {\n  const fetch = require(\"node-fetch\");\n\n  return function getJson(_url, query, _options = {}) {\n    const urlStr = createUrlString(_url, query);\n    const options = Object.assign({}, _options);\n    options.headers = Object.assign(options.headers || {}, HEADERS);\n    return fetch(urlStr, options).then(resp => {\n      if (resp.ok) return resp.json();\n      return resp.text().then(function (text) {\n        throw new Error(\"\".concat(resp.status, \" \").concat(resp.statusText, \" \\u2013 \").concat(text));\n      });\n    });\n  };\n}\n\nfunction createGetJsonp() {\n  const jsonp = require(\"jsonp\");\n\n  return function getJsonp(_url, query, options = {}) {\n    return new Promise(function (resolve, reject) {\n      const urlStr = createUrlString(_url, query);\n      jsonp(urlStr, {\n        timeout: options.timeout\n      }, function (err, data) {\n        // for compatibility with timeouts from request module\n        if (err && err.message === \"Timeout\") err.code = \"ETIMEDOUT\";\n        if (err) return reject(err);\n        return resolve(data);\n      });\n    });\n  };\n}\n\nmodule.exports = typeof window === \"undefined\" ? createGetJson() : createGetJsonp();","map":null,"metadata":{},"sourceType":"script"}