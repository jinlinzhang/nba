{"ast":null,"code":"const debug = require(\"debug\")(\"nba\");\n\nconst template = require(\"nba-client-template\");\n\nconst camelCase = require(\"camel-case\");\n\nconst _require = require(\"./transforms\"),\n      general = _require.general,\n      players = _require.players,\n      base = _require.base,\n      lineups = _require.lineups;\n\nconst paramMap = {};\ntemplate.parameters.forEach(function (param) {\n  paramMap[param.name] = param;\n});\nconst transformMap = {\n  playerProfile: general,\n  playerInfo: general,\n  playersInfo: players,\n  teamStats: base,\n  teamSplits: general,\n  teamYears: base,\n  playerSplits: general,\n  shots: general,\n  scoreboard: general,\n  playByPlay: general,\n  teamHistoricalLeaders: general,\n  teamInfoCommon: general,\n  commonTeamRoster: general,\n  teamPlayerDashboard: general,\n  lineups: lineups,\n  playerTracking: general,\n  homepageV2: general,\n  assistTracker: general,\n  playerStats: general,\n  playerClutch: general,\n  teamClutch: general,\n  playerShooting: general,\n  teamShooting: general,\n  teamPlayerOnOffDetails: general,\n  playerCompare: general\n};\n\nfunction makeStatsMethod(endpoint, transport) {\n  const defaults = {};\n  endpoint.parameters.forEach(function (param) {\n    defaults[param] = paramMap[param].default;\n  });\n  const ccName = camelCase(endpoint.name);\n  const transform = transformMap[ccName]; // if (transform == null) {\n  //   throw new Error(`No transform found for ${ccName}`);\n  // }\n\n  function statsMethod(query = {}) {\n    const reqParams = Object.assign({}, defaults, query);\n    debug(\"stats request\", endpoint.url, reqParams);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      if (response == null) return; // response is something like \"GameID is required\"\n\n      if (typeof response === \"string\") throw new Error(response);\n      return transform ? transform(response) : response;\n    });\n  }\n\n  statsMethod.parameters = endpoint.parameters;\n  statsMethod.defaults = defaults;\n  return statsMethod;\n}\n\nfunction makeStatsClient(transport) {\n  const client = {};\n  template.stats_endpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeStatsMethod(endpoint, transport);\n  });\n  client.withTransport = makeStatsClient;\n  return client;\n}\n\nmodule.exports = makeStatsClient(require(\"./get-json\"));","map":null,"metadata":{},"sourceType":"script"}